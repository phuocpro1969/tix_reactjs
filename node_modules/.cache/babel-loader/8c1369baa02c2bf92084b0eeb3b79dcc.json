{"ast":null,"code":"const initialState = {\n  CinemaSys: [],\n  InfoShowTimeEachSys: [],\n  CinemaSysSelected: null,\n  ListCinemaBrands: [],\n  CinemaBrandSelected: null,\n  ListFilm: []\n};\n\nconst CinemaHome = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_CINEMASYS_SUCCESS\":\n      {\n        return { ...state,\n          CinemaSys: action.payload\n        };\n      }\n\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\":\n      {\n        return { ...state,\n          ListCinemaBrands: action.payload,\n          CinemaBrandSelected: action.payload[0].maCumRap\n        };\n      }\n\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\":\n      {\n        var _action$payload$;\n\n        console.log(action.payload);\n        let dsPhim = (_action$payload$ = action.payload[0]) === null || _action$payload$ === void 0 ? void 0 : _action$payload$.lstCumRap;\n        console.log(dsPhim);\n        console.log(dsPhim[0].danhSachPhim);\n        return { ...state,\n          InfoShowTimeEachSys: action.payload,\n          ListFilm: dsPhim[0].danhSachPhim\n        };\n      }\n\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_FAILED\":\n      {\n        console.log(action.payload);\n        let emptyArrListFilm = [];\n        let emptyArrInfoShowTimeEachSys = [];\n        return { ...state,\n          ListFilm: emptyArrListFilm,\n          InfoShowTimeEachSys: emptyArrInfoShowTimeEachSys\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = CinemaHome;\nexport default CinemaHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"CinemaHome\");","map":{"version":3,"sources":["D:/tix-app/src/redux/reducers/CinemaHome.js"],"names":["initialState","CinemaSys","InfoShowTimeEachSys","CinemaSysSelected","ListCinemaBrands","CinemaBrandSelected","ListFilm","CinemaHome","state","action","type","payload","maCumRap","console","log","dsPhim","lstCumRap","danhSachPhim","emptyArrListFilm","emptyArrInfoShowTimeEachSys"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,mBAAmB,EAAE,EAFF;AAGnBC,EAAAA,iBAAiB,EAAE,IAHA;AAInBC,EAAAA,gBAAgB,EAAE,EAJC;AAKnBC,EAAAA,mBAAmB,EAAE,IALF;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AAA8B;AAC5B,eAAO,EAAE,GAAGF,KAAL;AAAYP,UAAAA,SAAS,EAAEQ,MAAM,CAACE;AAA9B,SAAP;AACD;;AACD,SAAK,+BAAL;AAAsC;AACpC,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAFpB;AAGLN,UAAAA,mBAAmB,EAAEI,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBC;AAHlC,SAAP;AAKD;;AACD,SAAK,qCAAL;AAA4C;AAAA;;AAC1CC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,YAAII,MAAM,uBAAGN,MAAM,CAACE,OAAP,CAAe,CAAf,CAAH,qDAAG,iBAAmBK,SAAhC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAC,CAAD,CAAN,CAAUE,YAAtB;AACA,eAAO,EACL,GAAGT,KADE;AAELN,UAAAA,mBAAmB,EAAEO,MAAM,CAACE,OAFvB;AAGLL,UAAAA,QAAQ,EAAES,MAAM,CAAC,CAAD,CAAN,CAAUE;AAHf,SAAP;AAKD;;AACD,SAAK,oCAAL;AAA2C;AACzCJ,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,YAAIO,gBAAgB,GAAG,EAAvB;AACA,YAAIC,2BAA2B,GAAG,EAAlC;AACA,eAAO,EACL,GAAGX,KADE;AAELF,UAAAA,QAAQ,EAAEY,gBAFL;AAGLhB,UAAAA,mBAAmB,EAAEiB;AAHhB,SAAP;AAKD;;AACD;AACE,aAAO,EAAE,GAAGX;AAAL,OAAP;AAjCJ;AAmCD,CApCD;;KAAMD,U;AAqCN,eAAeA,UAAf","sourcesContent":["const initialState = {\r\n  CinemaSys: [],\r\n  InfoShowTimeEachSys: [],\r\n  CinemaSysSelected: null,\r\n  ListCinemaBrands: [],\r\n  CinemaBrandSelected: null,\r\n  ListFilm: [],\r\n};\r\nconst CinemaHome = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CINEMASYS_SUCCESS\": {\r\n      return { ...state, CinemaSys: action.payload };\r\n    }\r\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        ListCinemaBrands: action.payload,\r\n        CinemaBrandSelected: action.payload[0].maCumRap,\r\n      };\r\n    }\r\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\": {\r\n      console.log(action.payload);\r\n      let dsPhim = action.payload[0]?.lstCumRap;\r\n      console.log(dsPhim);\r\n      console.log(dsPhim[0].danhSachPhim);\r\n      return {\r\n        ...state,\r\n        InfoShowTimeEachSys: action.payload,\r\n        ListFilm: dsPhim[0].danhSachPhim,\r\n      };\r\n    }\r\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_FAILED\": {\r\n      console.log(action.payload);\r\n      let emptyArrListFilm = [];\r\n      let emptyArrInfoShowTimeEachSys = [];\r\n      return {\r\n        ...state,\r\n        ListFilm: emptyArrListFilm,\r\n        InfoShowTimeEachSys: emptyArrInfoShowTimeEachSys,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default CinemaHome;\r\n"]},"metadata":{},"sourceType":"module"}