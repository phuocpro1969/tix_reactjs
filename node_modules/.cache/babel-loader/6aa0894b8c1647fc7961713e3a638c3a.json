{"ast":null,"code":"const initialState = {\n  bookingInfo: null,\n  listSeat: [],\n  listSeatSelected: [],\n  total: 0\n};\n\nconst BookingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_BOOKING_SUCCESS\":\n      {\n        let newBookingInfo = { ...action.payload.thongTinPhim\n        };\n        let newListSeat = [...action.payload.danhSachGhe];\n        return { ...state,\n          bookingInfo: newBookingInfo,\n          listSeat: newListSeat\n        };\n      }\n\n    case \"CHOOSE_SEAT\":\n      {\n        // console.log(action.payload);\n        let index = state.listSeatSelected.findIndex(ghe => ghe.maGhe === action.payload.maGhe);\n        let newListSeatSelected = [];\n\n        if (index === -1) {\n          newListSeatSelected = [...state.listSeatSelected];\n          newListSeatSelected.push(action.payload);\n        }\n\n        state.listSeatSelected = newListSeatSelected;\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = BookingReducer;\nexport default BookingReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingReducer\");","map":{"version":3,"sources":["D:/tix-app/src/redux/reducers/BookingReducer.js"],"names":["initialState","bookingInfo","listSeat","listSeatSelected","total","BookingReducer","state","action","type","newBookingInfo","payload","thongTinPhim","newListSeat","danhSachGhe","index","findIndex","ghe","maGhe","newListSeatSelected","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AAA4B;AAC1B,YAAIC,cAAc,GAAG,EAAE,GAAGF,MAAM,CAACG,OAAP,CAAeC;AAApB,SAArB;AACA,YAAIC,WAAW,GAAG,CAAC,GAAGL,MAAM,CAACG,OAAP,CAAeG,WAAnB,CAAlB;AACA,eAAO,EAAE,GAAGP,KAAL;AAAYL,UAAAA,WAAW,EAAEQ,cAAzB;AAAyCP,UAAAA,QAAQ,EAAEU;AAAnD,SAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB;AACA,YAAIE,KAAK,GAAGR,KAAK,CAACH,gBAAN,CAAuBY,SAAvB,CACTC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAcV,MAAM,CAACG,OAAP,CAAeO,KAD5B,CAAZ;AAGA,YAAIC,mBAAmB,GAAG,EAA1B;;AACA,YAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBI,UAAAA,mBAAmB,GAAG,CAAC,GAAGZ,KAAK,CAACH,gBAAV,CAAtB;AACAe,UAAAA,mBAAmB,CAACC,IAApB,CAAyBZ,MAAM,CAACG,OAAhC;AACD;;AACDJ,QAAAA,KAAK,CAACH,gBAAN,GAAyBe,mBAAzB;AAEA,eAAO,EAAE,GAAGZ;AAAL,SAAP;AACD;;AACD;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AArBJ;AAuBD,CAxBD;;KAAMD,c;AAyBN,eAAeA,cAAf","sourcesContent":["const initialState = {\r\n  bookingInfo: null,\r\n  listSeat: [],\r\n  listSeatSelected: [],\r\n  total: 0,\r\n};\r\n\r\nconst BookingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_BOOKING_SUCCESS\": {\r\n      let newBookingInfo = { ...action.payload.thongTinPhim };\r\n      let newListSeat = [...action.payload.danhSachGhe];\r\n      return { ...state, bookingInfo: newBookingInfo, listSeat: newListSeat };\r\n    }\r\n    case \"CHOOSE_SEAT\": {\r\n      // console.log(action.payload);\r\n      let index = state.listSeatSelected.findIndex(\r\n        (ghe) => ghe.maGhe === action.payload.maGhe\r\n      );\r\n      let newListSeatSelected = [];\r\n      if (index === -1) {\r\n        newListSeatSelected = [...state.listSeatSelected];\r\n        newListSeatSelected.push(action.payload);\r\n      }\r\n      state.listSeatSelected = newListSeatSelected;\r\n\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default BookingReducer;\r\n"]},"metadata":{},"sourceType":"module"}