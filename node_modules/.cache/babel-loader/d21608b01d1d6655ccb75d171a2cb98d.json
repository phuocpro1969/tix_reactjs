{"ast":null,"code":"const initialState = {\n  CinemaSys: [],\n  InfoShowTimeEachSys: [],\n  CinemaSysSelected: null,\n  ListCinemaBrands: [],\n  CinemaBrandSelected: null,\n  ListFilm: []\n};\n\nconst CinemaHome = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_CINEMASYS_SUCCESS\":\n      {\n        return { ...state,\n          CinemaSys: action.payload\n        };\n      }\n\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\":\n      {\n        console.log(action.payload); // let newMaCupRap =\n\n        return { ...state,\n          ListCinemaBrands: action.payload,\n          CinemaBrandSelected: action.payload[0].maCumRap\n        };\n      }\n\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\":\n      {\n        return { ...state,\n          InfoShowTimeEachSys: action.payload\n        };\n      }\n    // case \"GET_LIST_FILM_BY_ID_CINEMA_BRAND\": {\n    //   // console.log(action.payload);\n    //   // console.log(state.InfoShowTimeEachSys);\n    //   console.log(state.CinemaBrandSelected);\n    //   let newInfoShowTime = [...state.InfoShowTimeEachSys];\n    //   console.log(newInfoShowTime);\n    //   let infoOneBrand = newInfoShowTime[0]?.lstCumRap?.filter(\n    //     (item, index) => {\n    //       return item.maCumRap === state.CinemaBrandSelected;\n    //     }\n    //   );\n    //   console.log(infoOneBrand);\n    //   let listFilm = infoOneBrand?.map((item, index) => {\n    //     return item.danhSachPhim;\n    //   });\n    //   console.log(listFilm);\n    //   // state.ListFilm = [...listMovie];\n    //   return { ...state };\n    // }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = CinemaHome;\nexport default CinemaHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"CinemaHome\");","map":{"version":3,"sources":["D:/tix-app/src/redux/reducers/CinemaHome.js"],"names":["initialState","CinemaSys","InfoShowTimeEachSys","CinemaSysSelected","ListCinemaBrands","CinemaBrandSelected","ListFilm","CinemaHome","state","action","type","payload","console","log","maCumRap"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,mBAAmB,EAAE,EAFF;AAGnBC,EAAAA,iBAAiB,EAAE,IAHA;AAInBC,EAAAA,gBAAgB,EAAE,EAJC;AAKnBC,EAAAA,mBAAmB,EAAE,IALF;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AAA8B;AAC5B,eAAO,EAAE,GAAGF,KAAL;AAAYP,UAAAA,SAAS,EAAEQ,MAAM,CAACE;AAA9B,SAAP;AACD;;AACD,SAAK,+BAAL;AAAsC;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB,EADoC,CAEpC;;AACA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAFpB;AAGLN,UAAAA,mBAAmB,EAAEI,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBG;AAHlC,SAAP;AAKD;;AACD,SAAK,qCAAL;AAA4C;AAC1C,eAAO,EAAE,GAAGN,KAAL;AAAYN,UAAAA,mBAAmB,EAAEO,MAAM,CAACE;AAAxC,SAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;AApCJ;AAsCD,CAvCD;;KAAMD,U;AAwCN,eAAeA,UAAf","sourcesContent":["const initialState = {\r\n  CinemaSys: [],\r\n  InfoShowTimeEachSys: [],\r\n  CinemaSysSelected: null,\r\n  ListCinemaBrands: [],\r\n  CinemaBrandSelected: null,\r\n  ListFilm: [],\r\n};\r\nconst CinemaHome = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CINEMASYS_SUCCESS\": {\r\n      return { ...state, CinemaSys: action.payload };\r\n    }\r\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\": {\r\n      console.log(action.payload);\r\n      // let newMaCupRap =\r\n      return {\r\n        ...state,\r\n        ListCinemaBrands: action.payload,\r\n        CinemaBrandSelected: action.payload[0].maCumRap,\r\n      };\r\n    }\r\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\": {\r\n      return { ...state, InfoShowTimeEachSys: action.payload };\r\n    }\r\n    // case \"GET_LIST_FILM_BY_ID_CINEMA_BRAND\": {\r\n    //   // console.log(action.payload);\r\n    //   // console.log(state.InfoShowTimeEachSys);\r\n    //   console.log(state.CinemaBrandSelected);\r\n    //   let newInfoShowTime = [...state.InfoShowTimeEachSys];\r\n    //   console.log(newInfoShowTime);\r\n    //   let infoOneBrand = newInfoShowTime[0]?.lstCumRap?.filter(\r\n    //     (item, index) => {\r\n    //       return item.maCumRap === state.CinemaBrandSelected;\r\n    //     }\r\n    //   );\r\n    //   console.log(infoOneBrand);\r\n    //   let listFilm = infoOneBrand?.map((item, index) => {\r\n    //     return item.danhSachPhim;\r\n    //   });\r\n    //   console.log(listFilm);\r\n    //   // state.ListFilm = [...listMovie];\r\n    //   return { ...state };\r\n    // }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default CinemaHome;\r\n"]},"metadata":{},"sourceType":"module"}