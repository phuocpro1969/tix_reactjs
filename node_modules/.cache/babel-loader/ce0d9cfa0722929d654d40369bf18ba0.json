{"ast":null,"code":"const initialState = {\n  CinemaSys: [],\n  InfoShowTimeEachSys: [],\n  CinemaSysSelected: null,\n  ListCinemaBrands: [],\n  CinemaBrandSelected: null,\n  ListFilm: []\n};\n\nconst CinemaHome = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_CINEMASYS_SUCCESS\":\n      {\n        return { ...state,\n          CinemaSys: action.payload\n        };\n      }\n\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\":\n      {\n        // console.log(action.payload);\n        let newListRap = [...action.payload];\n        return { ...state,\n          ListCinemaBrands: action.payload,\n          CinemaBrandSelected: newListRap[0].maCumRap\n        };\n      }\n\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\":\n      {\n        // console.log(action.payload[0]);\n        console.log(state.CinemaBrandSelected);\n        let dsPhim = action.payload[0].lstCumRap.filter((item, index) => {\n          return item.maCumRap === state.CinemaBrandSelected;\n        });\n        console.log(dsPhim);\n        return { ...state,\n          InfoShowTimeEachSys: action.payload\n        };\n      }\n\n    case \"GET_LIST_FILM_BY_ID_CINEMA_BRAND\":\n      {\n        var _newInfoShowTime$, _newInfoShowTime$$lst;\n\n        // console.log(action.payload);\n        // console.log(state.InfoShowTimeEachSys);\n        // console.log(state.CinemaBrandSelected);\n        let newInfoShowTime = [...state.InfoShowTimeEachSys];\n        console.log(newInfoShowTime);\n        let infoOneBrand = (_newInfoShowTime$ = newInfoShowTime[0]) === null || _newInfoShowTime$ === void 0 ? void 0 : (_newInfoShowTime$$lst = _newInfoShowTime$.lstCumRap) === null || _newInfoShowTime$$lst === void 0 ? void 0 : _newInfoShowTime$$lst.filter((item, index) => {\n          return item.maCumRap === state.CinemaBrandSelected;\n        });\n        console.log(infoOneBrand);\n        let listFilm = infoOneBrand === null || infoOneBrand === void 0 ? void 0 : infoOneBrand.map((item, index) => {\n          return item.danhSachPhim;\n        });\n        console.log(listFilm); // state.ListFilm = [...listMovie];\n\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = CinemaHome;\nexport default CinemaHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"CinemaHome\");","map":{"version":3,"sources":["D:/tix-app/src/redux/reducers/CinemaHome.js"],"names":["initialState","CinemaSys","InfoShowTimeEachSys","CinemaSysSelected","ListCinemaBrands","CinemaBrandSelected","ListFilm","CinemaHome","state","action","type","payload","newListRap","maCumRap","console","log","dsPhim","lstCumRap","filter","item","index","newInfoShowTime","infoOneBrand","listFilm","map","danhSachPhim"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,mBAAmB,EAAE,EAFF;AAGnBC,EAAAA,iBAAiB,EAAE,IAHA;AAInBC,EAAAA,gBAAgB,EAAE,EAJC;AAKnBC,EAAAA,mBAAmB,EAAE,IALF;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AAA8B;AAC5B,eAAO,EAAE,GAAGF,KAAL;AAAYP,UAAAA,SAAS,EAAEQ,MAAM,CAACE;AAA9B,SAAP;AACD;;AACD,SAAK,+BAAL;AAAsC;AACpC;AACA,YAAIC,UAAU,GAAG,CAAC,GAAGH,MAAM,CAACE,OAAX,CAAjB;AAEA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAFpB;AAGLN,UAAAA,mBAAmB,EAAEO,UAAU,CAAC,CAAD,CAAV,CAAcC;AAH9B,SAAP;AAKD;;AACD,SAAK,qCAAL;AAA4C;AAC1C;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACH,mBAAlB;AACA,YAAIW,MAAM,GAAGP,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBM,SAAlB,CAA4BC,MAA5B,CAAmC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/D,iBAAOD,IAAI,CAACN,QAAL,KAAkBL,KAAK,CAACH,mBAA/B;AACD,SAFY,CAAb;AAGAS,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,eAAO,EAAE,GAAGR,KAAL;AAAYN,UAAAA,mBAAmB,EAAEO,MAAM,CAACE;AAAxC,SAAP;AACD;;AACD,SAAK,kCAAL;AAAyC;AAAA;;AACvC;AACA;AACA;AACA,YAAIU,eAAe,GAAG,CAAC,GAAGb,KAAK,CAACN,mBAAV,CAAtB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYM,eAAZ;AACA,YAAIC,YAAY,wBAAGD,eAAe,CAAC,CAAD,CAAlB,+EAAG,kBAAoBJ,SAAvB,0DAAG,sBAA+BC,MAA/B,CACjB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACf,iBAAOD,IAAI,CAACN,QAAL,KAAkBL,KAAK,CAACH,mBAA/B;AACD,SAHgB,CAAnB;AAKAS,QAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACA,YAAIC,QAAQ,GAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEE,GAAd,CAAkB,CAACL,IAAD,EAAOC,KAAP,KAAiB;AAChD,iBAAOD,IAAI,CAACM,YAAZ;AACD,SAFc,CAAf;AAGAX,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EAfuC,CAgBvC;;AACA,eAAO,EAAE,GAAGf;AAAL,SAAP;AACD;;AACD;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AA3CJ;AA6CD,CA9CD;;KAAMD,U;AA+CN,eAAeA,UAAf","sourcesContent":["const initialState = {\r\n  CinemaSys: [],\r\n  InfoShowTimeEachSys: [],\r\n  CinemaSysSelected: null,\r\n  ListCinemaBrands: [],\r\n  CinemaBrandSelected: null,\r\n  ListFilm: [],\r\n};\r\nconst CinemaHome = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CINEMASYS_SUCCESS\": {\r\n      return { ...state, CinemaSys: action.payload };\r\n    }\r\n    case \"GET_LIST_CINEMA_BRAND_SUCCESS\": {\r\n      // console.log(action.payload);\r\n      let newListRap = [...action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        ListCinemaBrands: action.payload,\r\n        CinemaBrandSelected: newListRap[0].maCumRap,\r\n      };\r\n    }\r\n    case \"GET_INFO_SHOW_TIME_EACH_SYS_SUCCESS\": {\r\n      // console.log(action.payload[0]);\r\n      console.log(state.CinemaBrandSelected);\r\n      let dsPhim = action.payload[0].lstCumRap.filter((item, index) => {\r\n        return item.maCumRap === state.CinemaBrandSelected;\r\n      });\r\n      console.log(dsPhim);\r\n      return { ...state, InfoShowTimeEachSys: action.payload };\r\n    }\r\n    case \"GET_LIST_FILM_BY_ID_CINEMA_BRAND\": {\r\n      // console.log(action.payload);\r\n      // console.log(state.InfoShowTimeEachSys);\r\n      // console.log(state.CinemaBrandSelected);\r\n      let newInfoShowTime = [...state.InfoShowTimeEachSys];\r\n      console.log(newInfoShowTime);\r\n      let infoOneBrand = newInfoShowTime[0]?.lstCumRap?.filter(\r\n        (item, index) => {\r\n          return item.maCumRap === state.CinemaBrandSelected;\r\n        }\r\n      );\r\n      console.log(infoOneBrand);\r\n      let listFilm = infoOneBrand?.map((item, index) => {\r\n        return item.danhSachPhim;\r\n      });\r\n      console.log(listFilm);\r\n      // state.ListFilm = [...listMovie];\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default CinemaHome;\r\n"]},"metadata":{},"sourceType":"module"}