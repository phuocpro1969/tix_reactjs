{"ast":null,"code":"const initialState = {\n  bookingInfo: null,\n  listSeat: [],\n  listSeatSelected: [],\n  total: 0,\n  activeNotification: 0,\n  preActiveNotification: 0\n};\n\nconst BookingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_BOOKING_SUCCESS\":\n      {\n        let newBookingInfo = { ...action.payload.thongTinPhim\n        };\n        let newListSeat = [...action.payload.danhSachGhe];\n        return { ...state,\n          bookingInfo: newBookingInfo,\n          listSeat: newListSeat\n        };\n      }\n\n    case \"CHOOSE_SEAT\":\n      {\n        function handleSeatMiddleSelected(listSeat, stt) {\n          return listSeat.filter(item => {\n            return parseInt(item.stt) === stt;\n          })[0].daDat;\n        }\n\n        let index = state.listSeatSelected.findIndex(ghe => ghe.maGhe === action.payload.maGhe);\n        let newListSeatSelected = [];\n        newListSeatSelected = [...state.listSeatSelected];\n        let activateCurrent = 0;\n\n        if (index === -1) {\n          state.total += action.payload.giaVe;\n          newListSeatSelected.push(action.payload);\n          newListSeatSelected.sort(function (a, b) {\n            return parseInt(a.stt) - parseInt(b.stt);\n          });\n          console.log(newListSeatSelected);\n\n          for (let i = 0; i < newListSeatSelected.length - 1; i++) {\n            if (newListSeatSelected[i].codeRow === newListSeatSelected[i + 1].codeRow) {\n              if (parseInt(newListSeatSelected[i].stt) + 2 === parseInt(newListSeatSelected[i + 1].stt)) {\n                if (!handleSeatMiddleSelected(state.listSeat, parseInt(newListSeatSelected[i].stt) + 1)) {\n                  activateCurrent++;\n                }\n              }\n            }\n          }\n\n          if (activateCurrent > state.preActiveNotification) {\n            state.activeNotification += 1;\n          }\n        } else {\n          state.total -= action.payload.giaVe;\n          newListSeatSelected.splice(index, 1);\n        }\n\n        state.listSeatSelected = newListSeatSelected;\n        return { ...state,\n          total: state.total,\n          activeNotification: state.activeNotification,\n          preActiveNotification: activateCurrent\n        };\n      }\n\n    case \"RESET_NOTIFY\":\n      {\n        return { ...state,\n          activeNotification: action.payload\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = BookingReducer;\nexport default BookingReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingReducer\");","map":{"version":3,"sources":["E:/tix_reactjs/src/redux/reducers/BookingReducer.js"],"names":["initialState","bookingInfo","listSeat","listSeatSelected","total","activeNotification","preActiveNotification","BookingReducer","state","action","type","newBookingInfo","payload","thongTinPhim","newListSeat","danhSachGhe","handleSeatMiddleSelected","stt","filter","item","parseInt","daDat","index","findIndex","ghe","maGhe","newListSeatSelected","activateCurrent","giaVe","push","sort","a","b","console","log","i","length","codeRow","splice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,KAAK,EAAE,CAJY;AAKnBC,EAAAA,kBAAkB,EAAE,CALD;AAMnBC,EAAAA,qBAAqB,EAAE;AANJ,CAArB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AAA4B;AAC1B,YAAIC,cAAc,GAAG,EAAE,GAAGF,MAAM,CAACG,OAAP,CAAeC;AAApB,SAArB;AACA,YAAIC,WAAW,GAAG,CAAC,GAAGL,MAAM,CAACG,OAAP,CAAeG,WAAnB,CAAlB;AACA,eAAO,EAAE,GAAGP,KAAL;AAAYP,UAAAA,WAAW,EAAEU,cAAzB;AAAyCT,UAAAA,QAAQ,EAAEY;AAAnD,SAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,iBAASE,wBAAT,CAAkCd,QAAlC,EAA4Ce,GAA5C,EAAiD;AAC/C,iBAAOf,QAAQ,CAACgB,MAAT,CAAiBC,IAAD,IAAU;AAC/B,mBAAOC,QAAQ,CAACD,IAAI,CAACF,GAAN,CAAR,KAAuBA,GAA9B;AACD,WAFM,EAEJ,CAFI,EAEDI,KAFN;AAGD;;AACD,YAAIC,KAAK,GAAGd,KAAK,CAACL,gBAAN,CAAuBoB,SAAvB,CACTC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAchB,MAAM,CAACG,OAAP,CAAea,KAD5B,CAAZ;AAGA,YAAIC,mBAAmB,GAAG,EAA1B;AACAA,QAAAA,mBAAmB,GAAG,CAAC,GAAGlB,KAAK,CAACL,gBAAV,CAAtB;AACA,YAAIwB,eAAe,GAAG,CAAtB;;AACA,YAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBd,UAAAA,KAAK,CAACJ,KAAN,IAAeK,MAAM,CAACG,OAAP,CAAegB,KAA9B;AACAF,UAAAA,mBAAmB,CAACG,IAApB,CAAyBpB,MAAM,CAACG,OAAhC;AACAc,UAAAA,mBAAmB,CAACI,IAApB,CAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACvC,mBAAOZ,QAAQ,CAACW,CAAC,CAACd,GAAH,CAAR,GAAkBG,QAAQ,CAACY,CAAC,CAACf,GAAH,CAAjC;AACD,WAFD;AAGAgB,UAAAA,OAAO,CAACC,GAAR,CAAYR,mBAAZ;;AACA,eAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,mBAAmB,CAACU,MAApB,GAA6B,CAAjD,EAAoDD,CAAC,EAArD,EAAyD;AACvD,gBACET,mBAAmB,CAACS,CAAD,CAAnB,CAAuBE,OAAvB,KACAX,mBAAmB,CAACS,CAAC,GAAG,CAAL,CAAnB,CAA2BE,OAF7B,EAGE;AACA,kBACEjB,QAAQ,CAACM,mBAAmB,CAACS,CAAD,CAAnB,CAAuBlB,GAAxB,CAAR,GAAuC,CAAvC,KACAG,QAAQ,CAACM,mBAAmB,CAACS,CAAC,GAAG,CAAL,CAAnB,CAA2BlB,GAA5B,CAFV,EAGE;AACA,oBACE,CAACD,wBAAwB,CACvBR,KAAK,CAACN,QADiB,EAEvBkB,QAAQ,CAACM,mBAAmB,CAACS,CAAD,CAAnB,CAAuBlB,GAAxB,CAAR,GAAuC,CAFhB,CAD3B,EAKE;AACAU,kBAAAA,eAAe;AAChB;AACF;AACF;AACF;;AACD,cAAIA,eAAe,GAAGnB,KAAK,CAACF,qBAA5B,EAAmD;AACjDE,YAAAA,KAAK,CAACH,kBAAN,IAA4B,CAA5B;AACD;AACF,SA9BD,MA8BO;AACLG,UAAAA,KAAK,CAACJ,KAAN,IAAeK,MAAM,CAACG,OAAP,CAAegB,KAA9B;AACAF,UAAAA,mBAAmB,CAACY,MAApB,CAA2BhB,KAA3B,EAAkC,CAAlC;AACD;;AACDd,QAAAA,KAAK,CAACL,gBAAN,GAAyBuB,mBAAzB;AACA,eAAO,EACL,GAAGlB,KADE;AAELJ,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAFR;AAGLC,UAAAA,kBAAkB,EAAEG,KAAK,CAACH,kBAHrB;AAILC,UAAAA,qBAAqB,EAAEqB;AAJlB,SAAP;AAMD;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EAAE,GAAGnB,KAAL;AAAYH,UAAAA,kBAAkB,EAAEI,MAAM,CAACG;AAAvC,SAAP;AACD;;AACD;AACE,aAAO,EAAE,GAAGJ;AAAL,OAAP;AAhEJ;AAkED,CAnED;;KAAMD,c;AAoEN,eAAeA,cAAf","sourcesContent":["const initialState = {\r\n  bookingInfo: null,\r\n  listSeat: [],\r\n  listSeatSelected: [],\r\n  total: 0,\r\n  activeNotification: 0,\r\n  preActiveNotification: 0,\r\n};\r\n\r\nconst BookingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_BOOKING_SUCCESS\": {\r\n      let newBookingInfo = { ...action.payload.thongTinPhim };\r\n      let newListSeat = [...action.payload.danhSachGhe];\r\n      return { ...state, bookingInfo: newBookingInfo, listSeat: newListSeat };\r\n    }\r\n    case \"CHOOSE_SEAT\": {\r\n      function handleSeatMiddleSelected(listSeat, stt) {\r\n        return listSeat.filter((item) => {\r\n          return parseInt(item.stt) === stt;\r\n        })[0].daDat;\r\n      }\r\n      let index = state.listSeatSelected.findIndex(\r\n        (ghe) => ghe.maGhe === action.payload.maGhe\r\n      );\r\n      let newListSeatSelected = [];\r\n      newListSeatSelected = [...state.listSeatSelected];\r\n      let activateCurrent = 0;\r\n      if (index === -1) {\r\n        state.total += action.payload.giaVe;\r\n        newListSeatSelected.push(action.payload);\r\n        newListSeatSelected.sort(function (a, b) {\r\n          return parseInt(a.stt) - parseInt(b.stt);\r\n        });\r\n        console.log(newListSeatSelected);\r\n        for (let i = 0; i < newListSeatSelected.length - 1; i++) {\r\n          if (\r\n            newListSeatSelected[i].codeRow ===\r\n            newListSeatSelected[i + 1].codeRow\r\n          ) {\r\n            if (\r\n              parseInt(newListSeatSelected[i].stt) + 2 ===\r\n              parseInt(newListSeatSelected[i + 1].stt)\r\n            ) {\r\n              if (\r\n                !handleSeatMiddleSelected(\r\n                  state.listSeat,\r\n                  parseInt(newListSeatSelected[i].stt) + 1\r\n                )\r\n              ) {\r\n                activateCurrent++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (activateCurrent > state.preActiveNotification) {\r\n          state.activeNotification += 1;\r\n        }\r\n      } else {\r\n        state.total -= action.payload.giaVe;\r\n        newListSeatSelected.splice(index, 1);\r\n      }\r\n      state.listSeatSelected = newListSeatSelected;\r\n      return {\r\n        ...state,\r\n        total: state.total,\r\n        activeNotification: state.activeNotification,\r\n        preActiveNotification: activateCurrent,\r\n      };\r\n    }\r\n    case \"RESET_NOTIFY\": {\r\n      return { ...state, activeNotification: action.payload };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default BookingReducer;\r\n"]},"metadata":{},"sourceType":"module"}